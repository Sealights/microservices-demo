apiVersion: v1
kind: Pod
spec:
  serviceAccount: jenkins-service-account
  nodeSelector:
    type: nightly
  containers:
    - name: jnlp
      image: jenkins/inbound-agent:4.11.2-4
      workingDir: /home/jenkins/agent
      env:
        - name: JENKINS_URL
          value: "http://jenkins.jenkins.svc.cluster.local:8080/"
      resources:
        requests:
          cpu: 200m
          memory: 350Mi
          ephemeral-storage: 150Mi
        limits:
          cpu: 512m
          memory: 512Mi
          ephemeral-storage: 200Mi
      securityContext:
        privileged: true
    - name: shell
      image: 534369319675.dkr.ecr.us-west-2.amazonaws.com/sl-jenkins-base-ci:latest
      command:
        - sleep
      args:
        - infinity
      resources:
        requests:
          memory: 2000Mi
          cpu: 1.5
          ephemeral-storage: 2000Mi
        limits:
          memory: 3000Mi
          cpu: 2.5
          ephemeral-storage: 4000Mi
      volumeMounts:
        - name: postgresql-data
          mountPath: /tmp/postgresql/data
          readOnly: false
      securityContext:
        privileged: true
        allowPrivilegeEscalation: true
        runAsUser: 1000
    - name: kaniko
      image: gcr.io/kaniko-project/executor:debug
      command:
        - sleep
      args:
        - infinity
      resources:
        requests:
          memory: 3500Mi
          cpu: 1.5
          ephemeral-storage: 5000Mi
        limits:
          memory: 4500Mi
          cpu: 2.5
          ephemeral-storage: 10000Mi
      tty: true
      volumeMounts:
        - name: docker-config
          mountPath: /kaniko/.docker
    - name: postgresql
      image: public.ecr.aws/y8b5b7g6/postgres:13.2
      env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "postgres"
        - name: POSTGRES_DB
          value: "postgres"
        - name: POSTGRES_INITDB_ARGS
          value: '--auth-host=md5 --auth-local=md5'
        - name: POSTGRES_HOST_AUTH_METHOD
          value: 'md5'
      ports:
        - containerPort: 5432
      resources:
        requests:
          memory: "250Mi"
          cpu: "50m"
          ephemeral-storage: "100Mi"
        limits:
          memory: "1000Mi"
          cpu: "100m"
          ephemeral-storage: "200Mi"
      volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
          readOnly: false
  volumes:
    - name: docker-config
      projected:
        sources:
          - secret:
              name: docker-cfg
              items:
                - key: .dockerconfigjson
                  path: config.json
    - name: postgresql-data
      emptyDir: {}
